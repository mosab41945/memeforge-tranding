// Simple ERC-20 Contract ABI and Bytecode for Memecoin Creation
export const MEMECOIN_CONTRACT = {
  abi: [
    "constructor(string memory name, string memory symbol, uint256 totalSupply, uint8 decimals)",
    "function name() public view returns (string memory)",
    "function symbol() public view returns (string memory)",
    "function decimals() public view returns (uint8)",
    "function totalSupply() public view returns (uint256)",
    "function balanceOf(address account) public view returns (uint256)",
    "function transfer(address to, uint256 amount) public returns (bool)",
    "function allowance(address owner, address spender) public view returns (uint256)",
    "function approve(address spender, uint256 amount) public returns (bool)",
    "function transferFrom(address from, address to, uint256 amount) public returns (bool)",
    "event Transfer(address indexed from, address indexed to, uint256 value)",
    "event Approval(address indexed owner, address indexed spender, uint256 value)"
  ],

  // Compiled bytecode for a simple ERC-20 token
  bytecode: "0x60806040523480156200001157600080fd5b506040516200117138038062001171833981810160405281019062000037919062000294565b83600390805190602001906200004f92919062000154565b5082600490805190602001906200006892919062000154565b5081600560006101000a81548160ff021916908360ff16021790555080600081905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200013091906200033c565b60405180910390a350505050620003b9565b8280546200016290620003829565b90600052602060002090601f016020900481019282620001865760008555620001d2565b82601f10620001a157805160ff1916838001178555620001d2565b82800160010185558215620001d2579182015b82811115620001d1578251825591602001919060010190620001b4565b5b509050620001e19190620001e5565b5090565b5b8082111562000200576000816000905550600101620001e6565b5090565b6000620002196200021384620003a7565b620003a7565b905082815260208101848484011115620002385762000237620003a6565b5b62000245848285620003a5565b509392505050565b600082601f830112620002655762000264620003a4565b5b81516200027784826020860162000202565b91505092915050565b6000819050919050565b6000819050919050565b600080600080608085870312156200029e576200029d620003a3565b5b600085015167ffffffffffffffff811115620002bf57620002be620003a2565b5b620002cd878288016200024d565b945050602085015167ffffffffffffffff811115620002f157620002f0620003a2565b5b620002ff878288016200024d565b935050604062000312878288016200028e565b92505060606200032587828801620002a1565b91505092959194509250565b6000819050919050565b62000346816200033f565b82525050565b60006020820190506200036360008301846200033b565b92915050565b600062000376826200037d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620003be578082015181840152602081019050620003a1565b83811115620003ce576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200041d57607f821691505b602082108103620004335762000432620003d4565b5b50919050565b620008b880620004496000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610671565b60405180910390f35b6100e660048036038101906100e19190610573565b610308565b6040516100f3919061065c565b60405180910390f35b61010461032b565b6040516101119190610693565b60405180910390f35b610134600480360381019061012f91906104f0565b610335565b604051610141919061065c565b60405180910390f35b610152610364565b60405161015f91906106ae565b60405180910390f35b610182600480360381019061017d9190610573565b61037b565b60405161018f919061065c565b60405180910390f35b6101b260048036038101906101ad9190610451565b6103b2565b6040516101bf9190610693565b60405180910390f35b6101d06103fa565b6040516101dd9190610671565b60405180910390f35b61020060048036038101906101fb9190610573565b61048c565b60405161020d919061065c565b60405180910390f35b610230600480360381019061022b9190610573565b610503565b60405161023d919061065c565b60405180910390f35b610260600480360381019061025b91906104b0565b610526565b60405161026d9190610693565b60405180910390f35b6060600380546102859061075d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b19061075d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b6000806103136105ad565b90506103208185856105b5565b600191505092915050565b6000600254905090565b6000806103406105ad565b905061034d85828561077e565b61035885858561080a565b60019150509392505050565b6000600560009054906101000a900460ff16905090565b6000806103866105ad565b90506103a781858561039885896105f5565b6103a29190610719565b6105b5565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546104099061075d565b80601f01602080910402602001604051908101604052809291908181526020018280546104359061075d565b80156104825780601f1061045757610100808354040283529160200191610482565b820191906000526020600020905b81548152906001019060200180831161046557829003601f168201915b5050505050905090565b6000806104976105ad565b905060006104a582866105f5565b9050838110156104ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e1906106d3565b60405180910390fd5b6104f78286868403610593565b600191505092915050565b60008061050e6105ad565b905061051b81858561080a565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105be82610593565b9050919050565b6105ce81610593565b82525050565b60008160601b9050919050565b60006105ec826105d4565b9050919050565b60006106088260405180606001604052809186526020018473ffffffffffffffffffffffffffffffffffffffff168152602001848152509050969392505050565b600082825260208201905092915050565b600061065082610616565b61065a8185610621565b935061066a818560208601610632565b61067381610665565b840191505092915050565b600060208201905061069360008301846105c5565b92915050565b60006020820190506106ae60008301846105f9565b92915050565b60006020820190506106c960008301846105e7565b92915050565b600060208201905081810360008301526106e881610645565b9050919050565b60006106fa826106c9565b9050919050565b6000610710826106ef565b9050919050565b600061072282610705565b915061072d83610705565b925082820190508082111561074557610744610776565b5b92915050565b60006002820490506001821680610775607f821691505b60208210810361077e5761077d610665565b5b50919050565b600061078f8484610526565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108045781811015610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f8906106d3565b60405180910390fd5b6108038484848403610593565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610879576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087090610633565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df906106b3565b60405180910390fd5b6108f383838361088a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610979576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097090610673565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a0a9190610719565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a6e9190610693565b60405180910390a3610a8184848461088f565b50505050565b505050565b50505056fea2646970667358221220a2df7a1b34c8e9b8c2f07c9a3b5e4f8d9c6a7b1e0f9d8c7b6a5e4f3c2b1a00964736f6c63430008110033"
};

// Helper function to deploy memecoin
export const deployMemecoin = async (signer, tokenData) => {
  const { ethers } = await import('ethers');
  
  // Create contract factory
  const contractFactory = new ethers.ContractFactory(
    MEMECOIN_CONTRACT.abi, 
    MEMECOIN_CONTRACT.bytecode, 
    signer
  );
  
  // Convert total supply to wei (considering decimals)
  const totalSupplyWei = ethers.parseUnits(tokenData.totalSupply, parseInt(tokenData.decimals));
  
  // Deploy contract
  const contract = await contractFactory.deploy(
    tokenData.name,
    tokenData.symbol,
    totalSupplyWei,
    parseInt(tokenData.decimals),
    {
      gasLimit: 2000000, // Set gas limit to ensure deployment
    }
  );
  
  return contract;
};

// Pre-compiled token templates for quick deployment
export const TOKEN_TEMPLATES = {
  classic: {
    name: "Classic Meme",
    symbol: "MEME",
    totalSupply: "1000000000",
    decimals: "18",
    description: "A classic memecoin for the community!"
  },
  doge: {
    name: "Moon Doge",
    symbol: "MDOGE",
    totalSupply: "420690000000",
    decimals: "18",
    description: "To the moon and beyond! üöÄüêï"
  },
  pepe: {
    name: "Rare Pepe",
    symbol: "RPEPE",
    totalSupply: "888888888",
    decimals: "18",
    description: "The rarest pepe in existence! üê∏"
  },
  shiba: {
    name: "Shiba Moon",
    symbol: "SMOON",
    totalSupply: "1000000000000",
    decimals: "18",
    description: "Shiba going to the moon! üåô"
  },
  cat: {
    name: "Crypto Cat",
    symbol: "CCAT",
    totalSupply: "9000000000",
    decimals: "18",
    description: "Meow-nificent crypto cat! üê±"
  }
};